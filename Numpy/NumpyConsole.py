Python 3.6.2 (v3.6.2:5fd33b5, Jul  8 2017, 04:57:36) [MSC v.1900 64 bit (AMD64)] on win32
Type "copyright", "credits" or "license()" for more information.
>>> import numpy
>>> x = [2,3,5,6,7,8]
>>> y = numpy.array([3,5,7,8,2,2])
>>> x
[2, 3, 5, 6, 7, 8]
>>> y
array([3, 5, 7, 8, 2, 2])
>>> print(y)
[3 5 7 8 2 2]
>>> x = [2,3,5,6,7,8,'hi','bye',10.5]
>>> y = numpy.array([3,5,7,8,2,2,'hi','hello',10.5])
>>> x
[2, 3, 5, 6, 7, 8, 'hi', 'bye', 10.5]
>>> y
array(['3', '5', '7', '8', '2', '2', 'hi', 'hello', '10.5'], dtype='<U11')
>>> print(y)
['3' '5' '7' '8' '2' '2' 'hi' 'hello' '10.5']
>>> y = numpy.array([3,5,7,8,2,2,10.5])
>>> print(y)
[ 3.   5.   7.   8.   2.   2.  10.5]
>>> y[0]
3.0
>>> y[0:5]
array([3., 5., 7., 8., 2.])
>>> import numpy as np
>>> y = np.array([3,5,7,8,2,2,10.5,12,34,57])
>>> y
array([ 3. ,  5. ,  7. ,  8. ,  2. ,  2. , 10.5, 12. , 34. , 57. ])
>>> y.shape
(10,)
>>> y = np.array([[3,5,7],[8,2,2],[10.5,12,34]])
>>> print(y)
[[ 3.   5.   7. ]
 [ 8.   2.   2. ]
 [10.5 12.  34. ]]
>>> x = [[2,3,5],[6,7,8],[3,5,6]]
>>> print(x)
[[2, 3, 5], [6, 7, 8], [3, 5, 6]]
>>> x[1][0]
6
>>> y[1][0]
8.0
>>> x[1][0:2]
[6, 7]
>>> y[1][0:2]
array([8., 2.])
>>> y[:,:]
array([[ 3. ,  5. ,  7. ],
       [ 8. ,  2. ,  2. ],
       [10.5, 12. , 34. ]])
>>> y[0:1,0:2]
array([[3., 5.]])
>>> y[1:3,1:3]
array([[ 2.,  2.],
       [12., 34.]])
>>> y.shape
(3, 3)
>>> np.arange(0,14)
array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13])
>>> np.arange(0,14,2)
array([ 0,  2,  4,  6,  8, 10, 12])
>>> np.random.random()
0.6010192638205223
>>> np.random.random()
0.2713366988332815
>>> np.random.random()
0.8068085917553353
>>> np.random.random()
0.7583915568986729
>>> np.random.random(0,10)
Traceback (most recent call last):
  File "<pyshell#37>", line 1, in <module>
    np.random.random(0,10)
  File "mtrand.pyx", line 819, in mtrand.RandomState.random_sample
TypeError: random_sample() takes at most 1 positional argument (2 given)
>>> np.random.random(10)
array([0.63588417, 0.08078573, 0.47918639, 0.39514164, 0.57015387,
       0.52318021, 0.67546324, 0.42550265, 0.78447018, 0.88920419])
>>> np.random.randint(5)
3
>>> np.random.randint(5)
2
>>> np.random.randint(5)
1
>>> np.random.randint(5)
1
>>> np.random.randint(5)
2
>>> np.random.randint(5,10)
5
>>> np.random.randint(5,10)
7
>>> np.random.randint(5,10)
6
>>> np.random.randint(5,10,5)
array([8, 9, 5, 6, 9])
>>> np.random.randint(5,10,5)
array([6, 9, 9, 8, 9])
>>> np.random.randn(0,10)
array([], shape=(0, 10), dtype=float64)
>>> np.random.randn(10)
array([ 0.72862325, -1.14097966,  1.80516307, -0.3050267 , -0.9562999 ,
       -0.07138029,  0.07378452, -0.3507788 , -0.23761964,  0.59384453])
>>> np.random.randn(10,4)
array([[ 0.63444004,  0.58555542,  0.18476434,  0.91418336],
       [ 0.83524012,  1.01274589, -0.08683044,  0.8295264 ],
       [-1.39701529, -0.43319606,  1.00373478,  0.32238793],
       [-1.38684547,  0.45550318, -0.51774418,  0.59883051],
       [ 0.94858267,  0.61184734,  0.02230258,  0.7614134 ],
       [ 0.67978098,  1.69167857,  2.76593739,  1.45713014],
       [ 1.16044814,  0.25100538, -0.77720863, -0.32643796],
       [-1.1634319 ,  1.43306246,  0.65273248, -0.19363424],
       [-2.61940545, -0.01859379, -0.25495139, -0.56593638],
       [ 0.63953408, -2.27590683, -0.96457181, -0.34644786]])
>>> np.random.randn(2,2)
array([[ 1.45496771,  0.51188418],
       [-1.84496998, -1.32554492]])
>>> np.random.randn(2,2)
array([[-0.12930566, -1.48652549],
       [ 0.3774051 , -0.84278284]])

>>> np.random.randn(4,4)
array([[ 0.80427153, -0.30834761, -0.36704604,  1.07773735],
       [-0.30147127,  0.61212255,  0.15735031,  0.76998229],
       [-0.97463956,  0.42731808, -0.83546669, -1.09882553],
       [ 1.22951887,  2.0641458 , -1.06904543, -2.17006604]])
>>> np.random.randn(5,5)
array([[ 1.15780866,  0.31242806,  0.10941437,  0.44319398, -0.24991935],
       [ 0.79505006,  0.12597186, -1.30088598, -0.62874857,  0.24625968],
       [ 0.38403563,  0.71174433, -1.16885151, -0.69417874, -0.98954323],
       [ 0.10186733,  0.29364026,  1.45709529, -0.18601113, -0.44325775],
       [ 0.71904897,  0.10069002,  1.02721952,  0.5105462 ,  0.31259444]])
>>> np.random.randn(3,3,1)
array([[[-1.31911019],
        [ 0.47152962],
        [ 2.6520401 ]],

       [[ 0.40317919],
        [-0.22840636],
        [ 1.15951136]],

       [[ 0.86159979],
        [-1.64766042],
        [-0.33416769]]])
>>> x1 = np.random.randn(3,3,1)
>>> x1.shape
(3, 3, 1)
>>> np.random.randn(3,3,2)
array([[[-1.78165842, -1.56161667],
        [-0.04377307, -0.80197277],
        [-0.49265149,  0.44616179]],

       [[-0.35674729,  0.4806562 ],
        [-0.66473274,  0.56472553],
        [-1.11881225, -0.97388086]],

       [[-0.37372027, -1.7366017 ],
        [-0.06239326, -0.98688467],
        [-0.35912052,  0.74237541]]])
>>> np.ones(5)
array([1., 1., 1., 1., 1.])
>>> np.ones(5,5)
Traceback (most recent call last):
  File "<pyshell#61>", line 1, in <module>
    np.ones(5,5)
  File "C:\Python36\lib\site-packages\numpy\core\numeric.py", line 188, in ones
    a = empty(shape, dtype, order)
TypeError: data type not understood
>>> np.ones([5,5])
array([[1., 1., 1., 1., 1.],
       [1., 1., 1., 1., 1.],
       [1., 1., 1., 1., 1.],
       [1., 1., 1., 1., 1.],
       [1., 1., 1., 1., 1.]])
>>> np.zeros([5,5])
array([[0., 0., 0., 0., 0.],
       [0., 0., 0., 0., 0.],
       [0., 0., 0., 0., 0.],
       [0., 0., 0., 0., 0.],
       [0., 0., 0., 0., 0.]])
>>> np.ndarray(3)
array([1.06099790e-313, 1.69759663e-313, 4.24399158e-314])
>>> np.ndarray(5)
array([1., 1., 1., 1., 1.])
>>> np.ndarray(6)
array([0.00000000e+000, 7.54123992e-315, 1.03753786e-322,             nan,
       1.27405368e-311, 7.26211051e+238])
>>> np.ndarray(10)
array([ 0.72862325, -1.14097966,  1.80516307, -0.3050267 , -0.9562999 ,
       -0.07138029,  0.07378452, -0.3507788 , -0.23761964,  0.59384453])
>>> np.ndarray(30)
array([ 3.98935209e-311,  9.05437256e+271,  4.00126042e+195,
        4.58557007e+195,  5.66720357e+195,  6.04391952e-309,
        4.12029656e+103,  7.12720684e+195,  8.29520947e+195,
        9.58254579e+195,  1.19185510e+196,  1.42545563e+196,
        1.65905615e+196,  1.91653767e+196,  1.16072196e-308,
        9.28681073e+199,  9.12490158e+192,  2.73413951e+196,
        3.20134056e+196,  3.66854160e+196,  4.53393395e+196,
        5.46833605e+196,  6.40273814e+196,  7.33714024e+196,
        9.06798197e+196,  7.43594878e-309,  2.17437085e+243,
       -7.83041764e+117, -1.44536641e+137, -2.66790642e+156])
>>> np.ndarray(2,2)
Traceback (most recent call last):
  File "<pyshell#69>", line 1, in <module>
    np.ndarray(2,2)
TypeError: data type not understood
>>> np.ndarray([2,2])
array([[7.54123992e-315, 1.03753786e-322],
       [1.27405368e-311, 7.26211051e+238]])
>>> np.ndarray([3,3,1])
array([[[-1.31911019],
        [ 0.47152962],
        [ 2.6520401 ]],

       [[ 0.40317919],
        [-0.22840636],
        [ 1.15951136]],

       [[ 0.86159979],
        [-1.64766042],
        [-0.33416769]]])
>>> np.ndarray([3,3,2])
array([[[-1.78165842, -1.56161667],
        [-0.04377307, -0.80197277],
        [-0.49265149,  0.44616179]],

       [[-0.35674729,  0.4806562 ],
        [-0.66473274,  0.56472553],
        [-1.11881225, -0.97388086]],

       [[-0.37372027, -1.7366017 ],
        [-0.06239326, -0.98688467],
        [-0.35912052,  0.74237541]]])
>>> np.ndarray([3,3,2,2])
array([[[[ 2.56918152e+161,  5.39226144e+241],
         [ 1.62704843e+045,  1.67411456e+243]],

        [[ 1.48861373e+195,  7.69846922e+218],
         [ 1.29701163e+184,  2.76440011e+040]],

        [[ 5.80688899e-013,  1.43979928e+214],
         [ 6.96768400e+252,  1.43979916e+214]]],


       [[[ 1.05894269e-153,  7.82370096e+179],
         [ 1.67182243e+243,  8.02613363e+165]],

        [[ 5.56077381e-114,  1.05702168e-153],
         [ 1.66354575e-071,  9.09609803e+223]],

        [[ 6.96768400e+252,  7.75308213e+228],
         [ 8.02524278e-095,  2.23296893e+271]]],


       [[[ 1.29883052e+219,  3.76186355e+174],
         [ 1.03551639e-259,  2.36226404e+232]],

        [[ 2.64686102e+180,  9.75002298e-110],
         [ 7.33952924e+223, -9.77772337e+197]],

        [[-3.63027536e+125,  4.53801550e+279],
         [ 2.24694849e+142,  1.47557234e+142]]]])
>>> np.ndarray([3,3,2,2], dtype='int32')
array([[[[ 1131202045, -1073970772],
         [-1024020268, -1074201503]],

        [[-1753917621, -1079613076],
         [ -831409032, -1075205694]],

        [[  572643405, -1075869798],
         [  722987481,  1071418858]]],


       [[[-1812626855, -1076439822],
         [  895945493,  1071563538]],

        [[-1716061539, -1075493507],
         [ 1185484981,  1071780411]],

        [[-1418141231, -1074665817],
         [  834488352, -1074845176]]],


       [[[ 1806448079, -1076368632],
         [ -584952171, -1074018018]],

        [[-2021385800, -1078988286],
         [  704035532, -1074817905]],

        [[-1572285626, -1076429868],
         [  320663755,  1072152970]]]])
>>> x2 = np.ndarray([3,3,1])
>>> x2
array([[[-1.31911019],
        [ 0.47152962],
        [ 2.6520401 ]],

       [[ 0.40317919],
        [-0.22840636],
        [ 1.15951136]],

       [[ 0.86159979],
        [-1.64766042],
        [-0.33416769]]])
>>> x2.ravel()
array([-1.31911019,  0.47152962,  2.6520401 ,  0.40317919, -0.22840636,
        1.15951136,  0.86159979, -1.64766042, -0.33416769])
>>> x1
array([[[-0.47114651],
        [-0.06256966],
        [-0.81533366]],

       [[ 3.05862715],
        [ 1.80824085],
        [ 0.12720245]],

       [[-0.40528134],
        [ 0.67532583],
        [ 0.5725404 ]]])
>>> x2
array([[[-1.31911019],
        [ 0.47152962],
        [ 2.6520401 ]],

       [[ 0.40317919],
        [-0.22840636],
        [ 1.15951136]],

       [[ 0.86159979],
        [-1.64766042],
        [-0.33416769]]])
>>> y
array([[ 3. ,  5. ,  7. ],
       [ 8. ,  2. ,  2. ],
       [10.5, 12. , 34. ]])
>>> y1 = y.ravel()
>>> y1
array([ 3. ,  5. ,  7. ,  8. ,  2. ,  2. , 10.5, 12. , 34. ])
>>> y1.shape
(9,)
>>> y1.reshape(3,3)
array([[ 3. ,  5. ,  7. ],
       [ 8. ,  2. ,  2. ],
       [10.5, 12. , 34. ]])
>>> 
